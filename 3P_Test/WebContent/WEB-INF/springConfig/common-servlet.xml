<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

<!-- ViewResolver 등록   Controller -> ModelAndView 설정에 SetViewName의 주소찾기 간편함을 위해 사용-->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
   <property name="prefix" value="/WEB-INF/view/"></property>
   <property name="suffix" value=".jsp"></property>
</bean>

<!-- @Controller, @Repository, @Service ... -->
<context:component-scan base-package="common"/>
<context:annotation-config />

<!-- 파일 첨부를 위한 multipart 선언 -->
<bean id ='multipartResolver' class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>


<!-- JNDI 설정 -->
<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
   <property name="jndiName" value="java:comp/env/jdbc/msql"></property>
</bean>

<!-- String mybatis 설정 -->
<!-- <bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
<!--    <property name="dataSource" ref="dataSource"></property> -->
<!--    <property name="configLocation" value="classpath:common/mybatis/configMybatis.xml"></property> -->
<!--    <property name="mapperLocations" value="classpath*:common/mapper/*.xml"></property> -->
<!-- </bean> -->

<bean id="ss" class="org.mybatis.spring.SqlSessionTemplate">
   <constructor-arg ref="factoryBean"></constructor-arg>
</bean>


<!-- Ajax의 한글깨짐 처리를 위한 소스 -->
<mvc:annotation-driven>
   <mvc:message-converters>
      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
         <property name="supportedMediaTypes">
            <list>
               <value>text/html;charset=UTF-8</value>
            </list>
         </property>
      </bean>
   </mvc:message-converters>
</mvc:annotation-driven>

</beans>